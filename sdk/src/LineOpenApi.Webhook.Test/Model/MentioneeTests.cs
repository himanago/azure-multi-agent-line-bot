/*
 * Webhook Type Definition
 *
 * Webhook event definition of the LINE Messaging API
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using LineOpenApi.Webhook.Model;
using LineOpenApi.Webhook.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace LineOpenApi.Webhook.Test.Model
{
    /// <summary>
    ///  Class for testing Mentionee
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MentioneeTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Mentionee
        //private Mentionee instance;

        public MentioneeTests()
        {
            // TODO uncomment below to create an instance of Mentionee
            //instance = new Mentionee();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Mentionee
        /// </summary>
        [Fact]
        public void MentioneeInstanceTest()
        {
            // TODO uncomment below to test "IsType" Mentionee
            //Assert.IsType<Mentionee>(instance);
        }

        /// <summary>
        /// Test deserialize a AllMentionee from type Mentionee
        /// </summary>
        [Fact]
        public void AllMentioneeDeserializeFromMentioneeTest()
        {
            // TODO uncomment below to test deserialize a AllMentionee from type Mentionee
            //Assert.IsType<Mentionee>(JsonConvert.DeserializeObject<Mentionee>(new AllMentionee().ToJson()));
        }

        /// <summary>
        /// Test deserialize a UserMentionee from type Mentionee
        /// </summary>
        [Fact]
        public void UserMentioneeDeserializeFromMentioneeTest()
        {
            // TODO uncomment below to test deserialize a UserMentionee from type Mentionee
            //Assert.IsType<Mentionee>(JsonConvert.DeserializeObject<Mentionee>(new UserMentionee().ToJson()));
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

        /// <summary>
        /// Test the property 'Index'
        /// </summary>
        [Fact]
        public void IndexTest()
        {
            // TODO unit test for the property 'Index'
        }

        /// <summary>
        /// Test the property 'Length'
        /// </summary>
        [Fact]
        public void LengthTest()
        {
            // TODO unit test for the property 'Length'
        }
    }
}
