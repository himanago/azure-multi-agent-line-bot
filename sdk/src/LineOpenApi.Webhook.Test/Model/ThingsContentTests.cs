/*
 * Webhook Type Definition
 *
 * Webhook event definition of the LINE Messaging API
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using LineOpenApi.Webhook.Model;
using LineOpenApi.Webhook.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace LineOpenApi.Webhook.Test.Model
{
    /// <summary>
    ///  Class for testing ThingsContent
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ThingsContentTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ThingsContent
        //private ThingsContent instance;

        public ThingsContentTests()
        {
            // TODO uncomment below to create an instance of ThingsContent
            //instance = new ThingsContent();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ThingsContent
        /// </summary>
        [Fact]
        public void ThingsContentInstanceTest()
        {
            // TODO uncomment below to test "IsType" ThingsContent
            //Assert.IsType<ThingsContent>(instance);
        }

        /// <summary>
        /// Test deserialize a LinkThingsContent from type ThingsContent
        /// </summary>
        [Fact]
        public void LinkThingsContentDeserializeFromThingsContentTest()
        {
            // TODO uncomment below to test deserialize a LinkThingsContent from type ThingsContent
            //Assert.IsType<ThingsContent>(JsonConvert.DeserializeObject<ThingsContent>(new LinkThingsContent().ToJson()));
        }

        /// <summary>
        /// Test deserialize a ScenarioResultThingsContent from type ThingsContent
        /// </summary>
        [Fact]
        public void ScenarioResultThingsContentDeserializeFromThingsContentTest()
        {
            // TODO uncomment below to test deserialize a ScenarioResultThingsContent from type ThingsContent
            //Assert.IsType<ThingsContent>(JsonConvert.DeserializeObject<ThingsContent>(new ScenarioResultThingsContent().ToJson()));
        }

        /// <summary>
        /// Test deserialize a UnlinkThingsContent from type ThingsContent
        /// </summary>
        [Fact]
        public void UnlinkThingsContentDeserializeFromThingsContentTest()
        {
            // TODO uncomment below to test deserialize a UnlinkThingsContent from type ThingsContent
            //Assert.IsType<ThingsContent>(JsonConvert.DeserializeObject<ThingsContent>(new UnlinkThingsContent().ToJson()));
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
    }
}
