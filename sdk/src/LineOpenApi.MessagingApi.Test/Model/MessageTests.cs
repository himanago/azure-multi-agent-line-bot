/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using LineOpenApi.MessagingApi.Model;
using LineOpenApi.MessagingApi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace LineOpenApi.MessagingApi.Test.Model
{
    /// <summary>
    ///  Class for testing Message
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MessageTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Message
        //private Message instance;

        public MessageTests()
        {
            // TODO uncomment below to create an instance of Message
            //instance = new Message();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Message
        /// </summary>
        [Fact]
        public void MessageInstanceTest()
        {
            // TODO uncomment below to test "IsType" Message
            //Assert.IsType<Message>(instance);
        }

        /// <summary>
        /// Test deserialize a AudioMessage from type Message
        /// </summary>
        [Fact]
        public void AudioMessageDeserializeFromMessageTest()
        {
            // TODO uncomment below to test deserialize a AudioMessage from type Message
            //Assert.IsType<Message>(JsonConvert.DeserializeObject<Message>(new AudioMessage().ToJson()));
        }

        /// <summary>
        /// Test deserialize a FlexMessage from type Message
        /// </summary>
        [Fact]
        public void FlexMessageDeserializeFromMessageTest()
        {
            // TODO uncomment below to test deserialize a FlexMessage from type Message
            //Assert.IsType<Message>(JsonConvert.DeserializeObject<Message>(new FlexMessage().ToJson()));
        }

        /// <summary>
        /// Test deserialize a ImageMessage from type Message
        /// </summary>
        [Fact]
        public void ImageMessageDeserializeFromMessageTest()
        {
            // TODO uncomment below to test deserialize a ImageMessage from type Message
            //Assert.IsType<Message>(JsonConvert.DeserializeObject<Message>(new ImageMessage().ToJson()));
        }

        /// <summary>
        /// Test deserialize a ImagemapMessage from type Message
        /// </summary>
        [Fact]
        public void ImagemapMessageDeserializeFromMessageTest()
        {
            // TODO uncomment below to test deserialize a ImagemapMessage from type Message
            //Assert.IsType<Message>(JsonConvert.DeserializeObject<Message>(new ImagemapMessage().ToJson()));
        }

        /// <summary>
        /// Test deserialize a LocationMessage from type Message
        /// </summary>
        [Fact]
        public void LocationMessageDeserializeFromMessageTest()
        {
            // TODO uncomment below to test deserialize a LocationMessage from type Message
            //Assert.IsType<Message>(JsonConvert.DeserializeObject<Message>(new LocationMessage().ToJson()));
        }

        /// <summary>
        /// Test deserialize a StickerMessage from type Message
        /// </summary>
        [Fact]
        public void StickerMessageDeserializeFromMessageTest()
        {
            // TODO uncomment below to test deserialize a StickerMessage from type Message
            //Assert.IsType<Message>(JsonConvert.DeserializeObject<Message>(new StickerMessage().ToJson()));
        }

        /// <summary>
        /// Test deserialize a TemplateMessage from type Message
        /// </summary>
        [Fact]
        public void TemplateMessageDeserializeFromMessageTest()
        {
            // TODO uncomment below to test deserialize a TemplateMessage from type Message
            //Assert.IsType<Message>(JsonConvert.DeserializeObject<Message>(new TemplateMessage().ToJson()));
        }

        /// <summary>
        /// Test deserialize a TextMessage from type Message
        /// </summary>
        [Fact]
        public void TextMessageDeserializeFromMessageTest()
        {
            // TODO uncomment below to test deserialize a TextMessage from type Message
            //Assert.IsType<Message>(JsonConvert.DeserializeObject<Message>(new TextMessage().ToJson()));
        }

        /// <summary>
        /// Test deserialize a TextMessageV2 from type Message
        /// </summary>
        [Fact]
        public void TextMessageV2DeserializeFromMessageTest()
        {
            // TODO uncomment below to test deserialize a TextMessageV2 from type Message
            //Assert.IsType<Message>(JsonConvert.DeserializeObject<Message>(new TextMessageV2().ToJson()));
        }

        /// <summary>
        /// Test deserialize a VideoMessage from type Message
        /// </summary>
        [Fact]
        public void VideoMessageDeserializeFromMessageTest()
        {
            // TODO uncomment below to test deserialize a VideoMessage from type Message
            //Assert.IsType<Message>(JsonConvert.DeserializeObject<Message>(new VideoMessage().ToJson()));
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

        /// <summary>
        /// Test the property 'QuickReply'
        /// </summary>
        [Fact]
        public void QuickReplyTest()
        {
            // TODO unit test for the property 'QuickReply'
        }

        /// <summary>
        /// Test the property 'Sender'
        /// </summary>
        [Fact]
        public void SenderTest()
        {
            // TODO unit test for the property 'Sender'
        }
    }
}
