/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using LineOpenApi.MessagingApi.Model;
using LineOpenApi.MessagingApi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace LineOpenApi.MessagingApi.Test.Model
{
    /// <summary>
    ///  Class for testing NarrowcastProgressResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class NarrowcastProgressResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for NarrowcastProgressResponse
        //private NarrowcastProgressResponse instance;

        public NarrowcastProgressResponseTests()
        {
            // TODO uncomment below to create an instance of NarrowcastProgressResponse
            //instance = new NarrowcastProgressResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of NarrowcastProgressResponse
        /// </summary>
        [Fact]
        public void NarrowcastProgressResponseInstanceTest()
        {
            // TODO uncomment below to test "IsType" NarrowcastProgressResponse
            //Assert.IsType<NarrowcastProgressResponse>(instance);
        }

        /// <summary>
        /// Test the property 'Phase'
        /// </summary>
        [Fact]
        public void PhaseTest()
        {
            // TODO unit test for the property 'Phase'
        }

        /// <summary>
        /// Test the property 'SuccessCount'
        /// </summary>
        [Fact]
        public void SuccessCountTest()
        {
            // TODO unit test for the property 'SuccessCount'
        }

        /// <summary>
        /// Test the property 'FailureCount'
        /// </summary>
        [Fact]
        public void FailureCountTest()
        {
            // TODO unit test for the property 'FailureCount'
        }

        /// <summary>
        /// Test the property 'TargetCount'
        /// </summary>
        [Fact]
        public void TargetCountTest()
        {
            // TODO unit test for the property 'TargetCount'
        }

        /// <summary>
        /// Test the property 'FailedDescription'
        /// </summary>
        [Fact]
        public void FailedDescriptionTest()
        {
            // TODO unit test for the property 'FailedDescription'
        }

        /// <summary>
        /// Test the property 'ErrorCode'
        /// </summary>
        [Fact]
        public void ErrorCodeTest()
        {
            // TODO unit test for the property 'ErrorCode'
        }

        /// <summary>
        /// Test the property 'AcceptedTime'
        /// </summary>
        [Fact]
        public void AcceptedTimeTest()
        {
            // TODO unit test for the property 'AcceptedTime'
        }

        /// <summary>
        /// Test the property 'CompletedTime'
        /// </summary>
        [Fact]
        public void CompletedTimeTest()
        {
            // TODO unit test for the property 'CompletedTime'
        }
    }
}
