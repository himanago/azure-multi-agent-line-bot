/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using LineOpenApi.MessagingApi.Model;
using LineOpenApi.MessagingApi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace LineOpenApi.MessagingApi.Test.Model
{
    /// <summary>
    ///  Class for testing Action
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ActionTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Action
        //private Action instance;

        public ActionTests()
        {
            // TODO uncomment below to create an instance of Action
            //instance = new Action();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Action
        /// </summary>
        [Fact]
        public void ActionInstanceTest()
        {
            // TODO uncomment below to test "IsType" Action
            //Assert.IsType<Action>(instance);
        }

        /// <summary>
        /// Test deserialize a CameraAction from type Action
        /// </summary>
        [Fact]
        public void CameraActionDeserializeFromActionTest()
        {
            // TODO uncomment below to test deserialize a CameraAction from type Action
            //Assert.IsType<Action>(JsonConvert.DeserializeObject<Action>(new CameraAction().ToJson()));
        }

        /// <summary>
        /// Test deserialize a CameraRollAction from type Action
        /// </summary>
        [Fact]
        public void CameraRollActionDeserializeFromActionTest()
        {
            // TODO uncomment below to test deserialize a CameraRollAction from type Action
            //Assert.IsType<Action>(JsonConvert.DeserializeObject<Action>(new CameraRollAction().ToJson()));
        }

        /// <summary>
        /// Test deserialize a ClipboardAction from type Action
        /// </summary>
        [Fact]
        public void ClipboardActionDeserializeFromActionTest()
        {
            // TODO uncomment below to test deserialize a ClipboardAction from type Action
            //Assert.IsType<Action>(JsonConvert.DeserializeObject<Action>(new ClipboardAction().ToJson()));
        }

        /// <summary>
        /// Test deserialize a DatetimePickerAction from type Action
        /// </summary>
        [Fact]
        public void DatetimePickerActionDeserializeFromActionTest()
        {
            // TODO uncomment below to test deserialize a DatetimePickerAction from type Action
            //Assert.IsType<Action>(JsonConvert.DeserializeObject<Action>(new DatetimePickerAction().ToJson()));
        }

        /// <summary>
        /// Test deserialize a LocationAction from type Action
        /// </summary>
        [Fact]
        public void LocationActionDeserializeFromActionTest()
        {
            // TODO uncomment below to test deserialize a LocationAction from type Action
            //Assert.IsType<Action>(JsonConvert.DeserializeObject<Action>(new LocationAction().ToJson()));
        }

        /// <summary>
        /// Test deserialize a MessageAction from type Action
        /// </summary>
        [Fact]
        public void MessageActionDeserializeFromActionTest()
        {
            // TODO uncomment below to test deserialize a MessageAction from type Action
            //Assert.IsType<Action>(JsonConvert.DeserializeObject<Action>(new MessageAction().ToJson()));
        }

        /// <summary>
        /// Test deserialize a PostbackAction from type Action
        /// </summary>
        [Fact]
        public void PostbackActionDeserializeFromActionTest()
        {
            // TODO uncomment below to test deserialize a PostbackAction from type Action
            //Assert.IsType<Action>(JsonConvert.DeserializeObject<Action>(new PostbackAction().ToJson()));
        }

        /// <summary>
        /// Test deserialize a RichMenuSwitchAction from type Action
        /// </summary>
        [Fact]
        public void RichMenuSwitchActionDeserializeFromActionTest()
        {
            // TODO uncomment below to test deserialize a RichMenuSwitchAction from type Action
            //Assert.IsType<Action>(JsonConvert.DeserializeObject<Action>(new RichMenuSwitchAction().ToJson()));
        }

        /// <summary>
        /// Test deserialize a URIAction from type Action
        /// </summary>
        [Fact]
        public void URIActionDeserializeFromActionTest()
        {
            // TODO uncomment below to test deserialize a URIAction from type Action
            //Assert.IsType<Action>(JsonConvert.DeserializeObject<Action>(new URIAction().ToJson()));
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

        /// <summary>
        /// Test the property 'Label'
        /// </summary>
        [Fact]
        public void LabelTest()
        {
            // TODO unit test for the property 'Label'
        }
    }
}
