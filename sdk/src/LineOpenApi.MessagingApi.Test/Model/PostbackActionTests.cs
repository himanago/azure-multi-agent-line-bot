/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using LineOpenApi.MessagingApi.Model;
using LineOpenApi.MessagingApi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace LineOpenApi.MessagingApi.Test.Model
{
    /// <summary>
    ///  Class for testing PostbackAction
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PostbackActionTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PostbackAction
        //private PostbackAction instance;

        public PostbackActionTests()
        {
            // TODO uncomment below to create an instance of PostbackAction
            //instance = new PostbackAction();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PostbackAction
        /// </summary>
        [Fact]
        public void PostbackActionInstanceTest()
        {
            // TODO uncomment below to test "IsType" PostbackAction
            //Assert.IsType<PostbackAction>(instance);
        }

        /// <summary>
        /// Test the property 'Data'
        /// </summary>
        [Fact]
        public void DataTest()
        {
            // TODO unit test for the property 'Data'
        }

        /// <summary>
        /// Test the property 'DisplayText'
        /// </summary>
        [Fact]
        public void DisplayTextTest()
        {
            // TODO unit test for the property 'DisplayText'
        }

        /// <summary>
        /// Test the property 'Text'
        /// </summary>
        [Fact]
        public void TextTest()
        {
            // TODO unit test for the property 'Text'
        }

        /// <summary>
        /// Test the property 'InputOption'
        /// </summary>
        [Fact]
        public void InputOptionTest()
        {
            // TODO unit test for the property 'InputOption'
        }

        /// <summary>
        /// Test the property 'FillInText'
        /// </summary>
        [Fact]
        public void FillInTextTest()
        {
            // TODO unit test for the property 'FillInText'
        }
    }
}
