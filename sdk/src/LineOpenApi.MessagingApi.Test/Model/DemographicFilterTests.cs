/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using LineOpenApi.MessagingApi.Model;
using LineOpenApi.MessagingApi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace LineOpenApi.MessagingApi.Test.Model
{
    /// <summary>
    ///  Class for testing DemographicFilter
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DemographicFilterTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for DemographicFilter
        //private DemographicFilter instance;

        public DemographicFilterTests()
        {
            // TODO uncomment below to create an instance of DemographicFilter
            //instance = new DemographicFilter();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DemographicFilter
        /// </summary>
        [Fact]
        public void DemographicFilterInstanceTest()
        {
            // TODO uncomment below to test "IsType" DemographicFilter
            //Assert.IsType<DemographicFilter>(instance);
        }

        /// <summary>
        /// Test deserialize a AgeDemographicFilter from type DemographicFilter
        /// </summary>
        [Fact]
        public void AgeDemographicFilterDeserializeFromDemographicFilterTest()
        {
            // TODO uncomment below to test deserialize a AgeDemographicFilter from type DemographicFilter
            //Assert.IsType<DemographicFilter>(JsonConvert.DeserializeObject<DemographicFilter>(new AgeDemographicFilter().ToJson()));
        }

        /// <summary>
        /// Test deserialize a AppTypeDemographicFilter from type DemographicFilter
        /// </summary>
        [Fact]
        public void AppTypeDemographicFilterDeserializeFromDemographicFilterTest()
        {
            // TODO uncomment below to test deserialize a AppTypeDemographicFilter from type DemographicFilter
            //Assert.IsType<DemographicFilter>(JsonConvert.DeserializeObject<DemographicFilter>(new AppTypeDemographicFilter().ToJson()));
        }

        /// <summary>
        /// Test deserialize a AreaDemographicFilter from type DemographicFilter
        /// </summary>
        [Fact]
        public void AreaDemographicFilterDeserializeFromDemographicFilterTest()
        {
            // TODO uncomment below to test deserialize a AreaDemographicFilter from type DemographicFilter
            //Assert.IsType<DemographicFilter>(JsonConvert.DeserializeObject<DemographicFilter>(new AreaDemographicFilter().ToJson()));
        }

        /// <summary>
        /// Test deserialize a GenderDemographicFilter from type DemographicFilter
        /// </summary>
        [Fact]
        public void GenderDemographicFilterDeserializeFromDemographicFilterTest()
        {
            // TODO uncomment below to test deserialize a GenderDemographicFilter from type DemographicFilter
            //Assert.IsType<DemographicFilter>(JsonConvert.DeserializeObject<DemographicFilter>(new GenderDemographicFilter().ToJson()));
        }

        /// <summary>
        /// Test deserialize a OperatorDemographicFilter from type DemographicFilter
        /// </summary>
        [Fact]
        public void OperatorDemographicFilterDeserializeFromDemographicFilterTest()
        {
            // TODO uncomment below to test deserialize a OperatorDemographicFilter from type DemographicFilter
            //Assert.IsType<DemographicFilter>(JsonConvert.DeserializeObject<DemographicFilter>(new OperatorDemographicFilter().ToJson()));
        }

        /// <summary>
        /// Test deserialize a SubscriptionPeriodDemographicFilter from type DemographicFilter
        /// </summary>
        [Fact]
        public void SubscriptionPeriodDemographicFilterDeserializeFromDemographicFilterTest()
        {
            // TODO uncomment below to test deserialize a SubscriptionPeriodDemographicFilter from type DemographicFilter
            //Assert.IsType<DemographicFilter>(JsonConvert.DeserializeObject<DemographicFilter>(new SubscriptionPeriodDemographicFilter().ToJson()));
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
    }
}
