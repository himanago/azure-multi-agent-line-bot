/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using LineOpenApi.MessagingApi.Model;
using LineOpenApi.MessagingApi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace LineOpenApi.MessagingApi.Test.Model
{
    /// <summary>
    ///  Class for testing RichMenuResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class RichMenuResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for RichMenuResponse
        //private RichMenuResponse instance;

        public RichMenuResponseTests()
        {
            // TODO uncomment below to create an instance of RichMenuResponse
            //instance = new RichMenuResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RichMenuResponse
        /// </summary>
        [Fact]
        public void RichMenuResponseInstanceTest()
        {
            // TODO uncomment below to test "IsType" RichMenuResponse
            //Assert.IsType<RichMenuResponse>(instance);
        }

        /// <summary>
        /// Test the property 'RichMenuId'
        /// </summary>
        [Fact]
        public void RichMenuIdTest()
        {
            // TODO unit test for the property 'RichMenuId'
        }

        /// <summary>
        /// Test the property 'Size'
        /// </summary>
        [Fact]
        public void SizeTest()
        {
            // TODO unit test for the property 'Size'
        }

        /// <summary>
        /// Test the property 'Selected'
        /// </summary>
        [Fact]
        public void SelectedTest()
        {
            // TODO unit test for the property 'Selected'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'ChatBarText'
        /// </summary>
        [Fact]
        public void ChatBarTextTest()
        {
            // TODO unit test for the property 'ChatBarText'
        }

        /// <summary>
        /// Test the property 'Areas'
        /// </summary>
        [Fact]
        public void AreasTest()
        {
            // TODO unit test for the property 'Areas'
        }
    }
}
