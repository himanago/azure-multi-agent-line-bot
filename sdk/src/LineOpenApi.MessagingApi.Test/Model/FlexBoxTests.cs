/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using LineOpenApi.MessagingApi.Model;
using LineOpenApi.MessagingApi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace LineOpenApi.MessagingApi.Test.Model
{
    /// <summary>
    ///  Class for testing FlexBox
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class FlexBoxTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for FlexBox
        //private FlexBox instance;

        public FlexBoxTests()
        {
            // TODO uncomment below to create an instance of FlexBox
            //instance = new FlexBox();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of FlexBox
        /// </summary>
        [Fact]
        public void FlexBoxInstanceTest()
        {
            // TODO uncomment below to test "IsType" FlexBox
            //Assert.IsType<FlexBox>(instance);
        }

        /// <summary>
        /// Test the property 'Layout'
        /// </summary>
        [Fact]
        public void LayoutTest()
        {
            // TODO unit test for the property 'Layout'
        }

        /// <summary>
        /// Test the property 'Flex'
        /// </summary>
        [Fact]
        public void FlexTest()
        {
            // TODO unit test for the property 'Flex'
        }

        /// <summary>
        /// Test the property 'Contents'
        /// </summary>
        [Fact]
        public void ContentsTest()
        {
            // TODO unit test for the property 'Contents'
        }

        /// <summary>
        /// Test the property 'Spacing'
        /// </summary>
        [Fact]
        public void SpacingTest()
        {
            // TODO unit test for the property 'Spacing'
        }

        /// <summary>
        /// Test the property 'Margin'
        /// </summary>
        [Fact]
        public void MarginTest()
        {
            // TODO unit test for the property 'Margin'
        }

        /// <summary>
        /// Test the property 'Position'
        /// </summary>
        [Fact]
        public void PositionTest()
        {
            // TODO unit test for the property 'Position'
        }

        /// <summary>
        /// Test the property 'OffsetTop'
        /// </summary>
        [Fact]
        public void OffsetTopTest()
        {
            // TODO unit test for the property 'OffsetTop'
        }

        /// <summary>
        /// Test the property 'OffsetBottom'
        /// </summary>
        [Fact]
        public void OffsetBottomTest()
        {
            // TODO unit test for the property 'OffsetBottom'
        }

        /// <summary>
        /// Test the property 'OffsetStart'
        /// </summary>
        [Fact]
        public void OffsetStartTest()
        {
            // TODO unit test for the property 'OffsetStart'
        }

        /// <summary>
        /// Test the property 'OffsetEnd'
        /// </summary>
        [Fact]
        public void OffsetEndTest()
        {
            // TODO unit test for the property 'OffsetEnd'
        }

        /// <summary>
        /// Test the property 'BackgroundColor'
        /// </summary>
        [Fact]
        public void BackgroundColorTest()
        {
            // TODO unit test for the property 'BackgroundColor'
        }

        /// <summary>
        /// Test the property 'BorderColor'
        /// </summary>
        [Fact]
        public void BorderColorTest()
        {
            // TODO unit test for the property 'BorderColor'
        }

        /// <summary>
        /// Test the property 'BorderWidth'
        /// </summary>
        [Fact]
        public void BorderWidthTest()
        {
            // TODO unit test for the property 'BorderWidth'
        }

        /// <summary>
        /// Test the property 'CornerRadius'
        /// </summary>
        [Fact]
        public void CornerRadiusTest()
        {
            // TODO unit test for the property 'CornerRadius'
        }

        /// <summary>
        /// Test the property 'Width'
        /// </summary>
        [Fact]
        public void WidthTest()
        {
            // TODO unit test for the property 'Width'
        }

        /// <summary>
        /// Test the property 'MaxWidth'
        /// </summary>
        [Fact]
        public void MaxWidthTest()
        {
            // TODO unit test for the property 'MaxWidth'
        }

        /// <summary>
        /// Test the property 'Height'
        /// </summary>
        [Fact]
        public void HeightTest()
        {
            // TODO unit test for the property 'Height'
        }

        /// <summary>
        /// Test the property 'MaxHeight'
        /// </summary>
        [Fact]
        public void MaxHeightTest()
        {
            // TODO unit test for the property 'MaxHeight'
        }

        /// <summary>
        /// Test the property 'PaddingAll'
        /// </summary>
        [Fact]
        public void PaddingAllTest()
        {
            // TODO unit test for the property 'PaddingAll'
        }

        /// <summary>
        /// Test the property 'PaddingTop'
        /// </summary>
        [Fact]
        public void PaddingTopTest()
        {
            // TODO unit test for the property 'PaddingTop'
        }

        /// <summary>
        /// Test the property 'PaddingBottom'
        /// </summary>
        [Fact]
        public void PaddingBottomTest()
        {
            // TODO unit test for the property 'PaddingBottom'
        }

        /// <summary>
        /// Test the property 'PaddingStart'
        /// </summary>
        [Fact]
        public void PaddingStartTest()
        {
            // TODO unit test for the property 'PaddingStart'
        }

        /// <summary>
        /// Test the property 'PaddingEnd'
        /// </summary>
        [Fact]
        public void PaddingEndTest()
        {
            // TODO unit test for the property 'PaddingEnd'
        }

        /// <summary>
        /// Test the property 'Action'
        /// </summary>
        [Fact]
        public void ActionTest()
        {
            // TODO unit test for the property 'Action'
        }

        /// <summary>
        /// Test the property 'JustifyContent'
        /// </summary>
        [Fact]
        public void JustifyContentTest()
        {
            // TODO unit test for the property 'JustifyContent'
        }

        /// <summary>
        /// Test the property 'AlignItems'
        /// </summary>
        [Fact]
        public void AlignItemsTest()
        {
            // TODO unit test for the property 'AlignItems'
        }

        /// <summary>
        /// Test the property 'Background'
        /// </summary>
        [Fact]
        public void BackgroundTest()
        {
            // TODO unit test for the property 'Background'
        }
    }
}
