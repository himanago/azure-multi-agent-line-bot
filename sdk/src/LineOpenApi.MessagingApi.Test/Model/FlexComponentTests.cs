/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using LineOpenApi.MessagingApi.Model;
using LineOpenApi.MessagingApi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace LineOpenApi.MessagingApi.Test.Model
{
    /// <summary>
    ///  Class for testing FlexComponent
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class FlexComponentTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for FlexComponent
        //private FlexComponent instance;

        public FlexComponentTests()
        {
            // TODO uncomment below to create an instance of FlexComponent
            //instance = new FlexComponent();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of FlexComponent
        /// </summary>
        [Fact]
        public void FlexComponentInstanceTest()
        {
            // TODO uncomment below to test "IsType" FlexComponent
            //Assert.IsType<FlexComponent>(instance);
        }

        /// <summary>
        /// Test deserialize a FlexBox from type FlexComponent
        /// </summary>
        [Fact]
        public void FlexBoxDeserializeFromFlexComponentTest()
        {
            // TODO uncomment below to test deserialize a FlexBox from type FlexComponent
            //Assert.IsType<FlexComponent>(JsonConvert.DeserializeObject<FlexComponent>(new FlexBox().ToJson()));
        }

        /// <summary>
        /// Test deserialize a FlexButton from type FlexComponent
        /// </summary>
        [Fact]
        public void FlexButtonDeserializeFromFlexComponentTest()
        {
            // TODO uncomment below to test deserialize a FlexButton from type FlexComponent
            //Assert.IsType<FlexComponent>(JsonConvert.DeserializeObject<FlexComponent>(new FlexButton().ToJson()));
        }

        /// <summary>
        /// Test deserialize a FlexFiller from type FlexComponent
        /// </summary>
        [Fact]
        public void FlexFillerDeserializeFromFlexComponentTest()
        {
            // TODO uncomment below to test deserialize a FlexFiller from type FlexComponent
            //Assert.IsType<FlexComponent>(JsonConvert.DeserializeObject<FlexComponent>(new FlexFiller().ToJson()));
        }

        /// <summary>
        /// Test deserialize a FlexIcon from type FlexComponent
        /// </summary>
        [Fact]
        public void FlexIconDeserializeFromFlexComponentTest()
        {
            // TODO uncomment below to test deserialize a FlexIcon from type FlexComponent
            //Assert.IsType<FlexComponent>(JsonConvert.DeserializeObject<FlexComponent>(new FlexIcon().ToJson()));
        }

        /// <summary>
        /// Test deserialize a FlexImage from type FlexComponent
        /// </summary>
        [Fact]
        public void FlexImageDeserializeFromFlexComponentTest()
        {
            // TODO uncomment below to test deserialize a FlexImage from type FlexComponent
            //Assert.IsType<FlexComponent>(JsonConvert.DeserializeObject<FlexComponent>(new FlexImage().ToJson()));
        }

        /// <summary>
        /// Test deserialize a FlexSeparator from type FlexComponent
        /// </summary>
        [Fact]
        public void FlexSeparatorDeserializeFromFlexComponentTest()
        {
            // TODO uncomment below to test deserialize a FlexSeparator from type FlexComponent
            //Assert.IsType<FlexComponent>(JsonConvert.DeserializeObject<FlexComponent>(new FlexSeparator().ToJson()));
        }

        /// <summary>
        /// Test deserialize a FlexSpan from type FlexComponent
        /// </summary>
        [Fact]
        public void FlexSpanDeserializeFromFlexComponentTest()
        {
            // TODO uncomment below to test deserialize a FlexSpan from type FlexComponent
            //Assert.IsType<FlexComponent>(JsonConvert.DeserializeObject<FlexComponent>(new FlexSpan().ToJson()));
        }

        /// <summary>
        /// Test deserialize a FlexText from type FlexComponent
        /// </summary>
        [Fact]
        public void FlexTextDeserializeFromFlexComponentTest()
        {
            // TODO uncomment below to test deserialize a FlexText from type FlexComponent
            //Assert.IsType<FlexComponent>(JsonConvert.DeserializeObject<FlexComponent>(new FlexText().ToJson()));
        }

        /// <summary>
        /// Test deserialize a FlexVideo from type FlexComponent
        /// </summary>
        [Fact]
        public void FlexVideoDeserializeFromFlexComponentTest()
        {
            // TODO uncomment below to test deserialize a FlexVideo from type FlexComponent
            //Assert.IsType<FlexComponent>(JsonConvert.DeserializeObject<FlexComponent>(new FlexVideo().ToJson()));
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
    }
}
