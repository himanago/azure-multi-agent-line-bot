/*
 * LINE Messaging API
 *
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using LineOpenApi.MessagingApi.Model;
using LineOpenApi.MessagingApi.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace LineOpenApi.MessagingApi.Test.Model
{
    /// <summary>
    ///  Class for testing FlexImage
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class FlexImageTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for FlexImage
        //private FlexImage instance;

        public FlexImageTests()
        {
            // TODO uncomment below to create an instance of FlexImage
            //instance = new FlexImage();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of FlexImage
        /// </summary>
        [Fact]
        public void FlexImageInstanceTest()
        {
            // TODO uncomment below to test "IsType" FlexImage
            //Assert.IsType<FlexImage>(instance);
        }

        /// <summary>
        /// Test the property 'Url'
        /// </summary>
        [Fact]
        public void UrlTest()
        {
            // TODO unit test for the property 'Url'
        }

        /// <summary>
        /// Test the property 'Flex'
        /// </summary>
        [Fact]
        public void FlexTest()
        {
            // TODO unit test for the property 'Flex'
        }

        /// <summary>
        /// Test the property 'Margin'
        /// </summary>
        [Fact]
        public void MarginTest()
        {
            // TODO unit test for the property 'Margin'
        }

        /// <summary>
        /// Test the property 'Position'
        /// </summary>
        [Fact]
        public void PositionTest()
        {
            // TODO unit test for the property 'Position'
        }

        /// <summary>
        /// Test the property 'OffsetTop'
        /// </summary>
        [Fact]
        public void OffsetTopTest()
        {
            // TODO unit test for the property 'OffsetTop'
        }

        /// <summary>
        /// Test the property 'OffsetBottom'
        /// </summary>
        [Fact]
        public void OffsetBottomTest()
        {
            // TODO unit test for the property 'OffsetBottom'
        }

        /// <summary>
        /// Test the property 'OffsetStart'
        /// </summary>
        [Fact]
        public void OffsetStartTest()
        {
            // TODO unit test for the property 'OffsetStart'
        }

        /// <summary>
        /// Test the property 'OffsetEnd'
        /// </summary>
        [Fact]
        public void OffsetEndTest()
        {
            // TODO unit test for the property 'OffsetEnd'
        }

        /// <summary>
        /// Test the property 'Align'
        /// </summary>
        [Fact]
        public void AlignTest()
        {
            // TODO unit test for the property 'Align'
        }

        /// <summary>
        /// Test the property 'Gravity'
        /// </summary>
        [Fact]
        public void GravityTest()
        {
            // TODO unit test for the property 'Gravity'
        }

        /// <summary>
        /// Test the property 'Size'
        /// </summary>
        [Fact]
        public void SizeTest()
        {
            // TODO unit test for the property 'Size'
        }

        /// <summary>
        /// Test the property 'AspectRatio'
        /// </summary>
        [Fact]
        public void AspectRatioTest()
        {
            // TODO unit test for the property 'AspectRatio'
        }

        /// <summary>
        /// Test the property 'AspectMode'
        /// </summary>
        [Fact]
        public void AspectModeTest()
        {
            // TODO unit test for the property 'AspectMode'
        }

        /// <summary>
        /// Test the property 'BackgroundColor'
        /// </summary>
        [Fact]
        public void BackgroundColorTest()
        {
            // TODO unit test for the property 'BackgroundColor'
        }

        /// <summary>
        /// Test the property 'Action'
        /// </summary>
        [Fact]
        public void ActionTest()
        {
            // TODO unit test for the property 'Action'
        }

        /// <summary>
        /// Test the property 'Animated'
        /// </summary>
        [Fact]
        public void AnimatedTest()
        {
            // TODO unit test for the property 'Animated'
        }
    }
}
